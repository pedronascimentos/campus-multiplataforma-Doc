{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo ao Campus Multiplataforma","text":"<p>O\u00a0Campus Multiplataforma\u00a0\u00e9 um aplicativo desenvolvido para o Laborat\u00f3rio de Jornalismo\u00a0do Departamento de Comunica\u00e7\u00e3o da Universidade de Bras\u00edlia. Seu objetivo \u00e9 unificar todas as publica\u00e7\u00f5es do jornal\u00a0Campus\u00a0Multiplataforma em um \u00fanico aplicativo, com foco em integrar os conte\u00fados dos seguintes canais de comunica\u00e7\u00e3o (Al\u00e9m do pr\u00f3prio aplicativo):</p> <ul> <li>LinkedIn</li> <li>TikTok</li> <li>Instagram</li> <li>YouTube</li> </ul>"},{"location":"#organizacao-da-documentacao","title":"Organiza\u00e7\u00e3o da Documenta\u00e7\u00e3o","text":"<p>Esta documenta\u00e7\u00e3o foi estruturada para facilitar o acesso a informa\u00e7\u00f5es t\u00e9cnicas e organizacionais do projeto. Segue a estrutura:</p> <ol> <li>Introdu\u00e7\u00e3o: Vis\u00e3o geral do projeto, links \u00fateis e informa\u00e7\u00f5es da equipe.</li> <li>Planejamento: Informa\u00e7\u00f5es sobre requisitos, roadmap e casos de uso.</li> <li>Design do Sistema: Vis\u00e3o geral do design, arquitetura e modelagem do banco de dados.</li> <li>Produto: Guia de estilo, prot\u00f3tipo e resultados dos testes.</li> <li>Desenvolvimento: Integra\u00e7\u00e3o de APIs, configura\u00e7\u00e3o do ambiente e pr\u00e1ticas recomendadas.</li> <li>Documenta\u00e7\u00e3o de Refer\u00eancia: Artigos e materiais que serviram de base para o desenvolvimento.</li> </ol>"},{"location":"#equipe","title":"Equipe","text":"<p>A equipe \u00e9 composta por estudantes e desenvolvedores comprometidos com a entrega de um aplicativo funcional e inovador. Consulte a se\u00e7\u00e3o Equipe para mais detalhes sobre os membros.</p>"},{"location":"arquitetura/","title":"Ferramentas","text":""},{"location":"arquitetura/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Nesta se\u00e7\u00e3o, ser\u00e3o detalhadas as ferramentas e tecnologias utilizadas no desenvolvimento do projeto Campus Multiplataforma, visando justificar suas escolhas com base em crit\u00e9rios como:  </p> <ul> <li>Escalabilidade: Capacidade de crescer sem perda de desempenho.  </li> <li>Desempenho: Efici\u00eancia na execu\u00e7\u00e3o e processamento de dados.  </li> <li>Facilidade de Manuten\u00e7\u00e3o: Redu\u00e7\u00e3o de esfor\u00e7os para atualiza\u00e7\u00f5es e corre\u00e7\u00f5es.  </li> <li>Integra\u00e7\u00e3o com APIs Externas: Capacidade de centralizar dados de plataformas como YouTube, Instagram, Twitter, TikTok e LinkedIn.  </li> </ul> <p>A sele\u00e7\u00e3o das ferramentas foi feita considerando padr\u00f5es modernos de engenharia de software, com o objetivo de garantir uma arquitetura modular, robusta e aderente aos princ\u00edpios da Manuten\u00e7\u00e3o Centrada em Confiabilidade (RCM).</p>"},{"location":"arquitetura/#2-ferramentas-e-tecnologias-utilizadas","title":"2. Ferramentas e Tecnologias Utilizadas","text":""},{"location":"arquitetura/#21-react-native-expo-com-typescript","title":"2.1 React Native (Expo) com TypeScript","text":"<ul> <li>Descri\u00e7\u00e3o:   O React Native \u00e9 um framework open-source que permite o desenvolvimento de aplicativos m\u00f3veis nativos utilizando JavaScript e React. O Expo \u00e9 uma plataforma que facilita o desenvolvimento, teste e distribui\u00e7\u00e3o de apps React Native.  </li> <li>Motivos da Escolha: </li> <li>Desenvolvimento Multiplataforma: Permite desenvolver um \u00fanico c\u00f3digo para Android e iOS.  </li> <li>Produtividade: O Expo oferece recursos como atualiza\u00e7\u00f5es OTA (over-the-air), facilitando corre\u00e7\u00f5es sem reenvio para lojas de aplicativos.  </li> <li>TypeScript: Proporciona tipagem est\u00e1tica, facilitando a manuten\u00e7\u00e3o e identifica\u00e7\u00e3o de erros em tempo de desenvolvimento.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Desenvolvimento da interface do usu\u00e1rio (front-end) do aplicativo.  </li> <li>Integra\u00e7\u00e3o com APIs externas para carregamento e exibi\u00e7\u00e3o de conte\u00fados multim\u00eddia.  </li> </ul>"},{"location":"arquitetura/#22-firebase-backend-serverless","title":"2.2 Firebase (Backend Serverless)","text":"<p>O Firebase, uma plataforma de desenvolvimento de aplicativos do Google, foi utilizado como backend serverless. Ele fornece servi\u00e7os gerenciados de banco de dados, autentica\u00e7\u00e3o, armazenamento e monitoramento.  </p> <ul> <li>M\u00f3dulos Utilizados: </li> <li>Firebase Firestore: Banco de dados NoSQL para armazenar not\u00edcias e dados estruturados no formato NewsML.  <ul> <li>Justificativa: Escalabilidade, baixo tempo de resposta e integra\u00e7\u00e3o facilitada com o front-end.  </li> </ul> </li> <li>Firebase Authentication: Gerenciamento de autentica\u00e7\u00e3o dos usu\u00e1rios (email, senha e autentica\u00e7\u00e3o social).  <ul> <li>Justificativa: Seguran\u00e7a robusta e facilidade de implementa\u00e7\u00e3o.  </li> </ul> </li> <li>Firebase Storage: Armazenamento de arquivos (imagens e v\u00eddeos) de forma redundante e escal\u00e1vel.  <ul> <li>Justificativa: Hospedagem segura de m\u00eddia incorporada ao aplicativo.  </li> </ul> </li> <li> <p>Firebase Analytics e Crashlytics: Ferramentas para monitoramento e rastreamento de erros no aplicativo.  </p> <ul> <li>Justificativa: Identifica\u00e7\u00e3o r\u00e1pida de falhas e an\u00e1lise de desempenho.  </li> </ul> </li> <li> <p>Aplica\u00e7\u00e3o no Projeto: </p> </li> <li>Gerenciamento de usu\u00e1rios e not\u00edcias.  </li> <li>Armazenamento de arquivos como imagens e v\u00eddeos internos ao aplicativo.  </li> <li>Monitoramento cont\u00ednuo para garantir confiabilidade.</li> </ul>"},{"location":"arquitetura/#23-youtube-data-api-v3","title":"2.3 YouTube Data API v3","text":"<ul> <li>Descri\u00e7\u00e3o:   A YouTube Data API \u00e9 utilizada para incorporar v\u00eddeos hospedados no YouTube ao aplicativo.  </li> <li>Motivos da Escolha: </li> <li>Integra\u00e7\u00e3o Direta: Permite acessar v\u00eddeos, playlists e metadados em tempo real.  </li> <li>Escalabilidade: Reduz a necessidade de armazenar grandes arquivos de v\u00eddeo localmente.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Carregamento e exibi\u00e7\u00e3o de v\u00eddeos vinculados \u00e0s not\u00edcias no app.  </li> <li>Recupera\u00e7\u00e3o de metadados como t\u00edtulo, descri\u00e7\u00e3o e thumbnail.</li> </ul>"},{"location":"arquitetura/#24-instagram-graph-api-e-tiktok-api","title":"2.4 Instagram Graph API e TikTok API","text":"<ul> <li>Descri\u00e7\u00e3o:   APIs utilizadas para carregar v\u00eddeos curtos, imagens e publica\u00e7\u00f5es de ambas as plataformas diretamente no aplicativo.  </li> <li>Motivos da Escolha: </li> <li>Conte\u00fado Atualizado em Tempo Real: Permite recuperar postagens de forma din\u00e2mica.  </li> <li>Engajamento: Usu\u00e1rios podem visualizar o conte\u00fado e ser redirecionados \u00e0s plataformas originais.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Recupera\u00e7\u00e3o e exibi\u00e7\u00e3o de v\u00eddeos curtos (Reels e TikTok).  </li> <li>Carregamento de imagens e conte\u00fados multim\u00eddia incorporados.  </li> </ul>"},{"location":"arquitetura/#25-twitter-api","title":"2.5 Twitter API","text":"<ul> <li>Descri\u00e7\u00e3o:   A Twitter API permite acessar postagens p\u00fablicas com imagens, v\u00eddeos e textos para incorpora\u00e7\u00e3o ao aplicativo.  </li> <li>Motivos da Escolha: </li> <li>Flexibilidade: Permite recupera\u00e7\u00e3o de textos, imagens e v\u00eddeos com metadados completos.  </li> <li>Engajamento: Integra\u00e7\u00e3o direta com postagens externas.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Incorpora\u00e7\u00e3o de not\u00edcias, postagens e tweets relevantes ao aplicativo.  </li> </ul>"},{"location":"arquitetura/#26-imgur-api","title":"2.6 Imgur API","text":"<ul> <li>Descri\u00e7\u00e3o:   A Imgur API \u00e9 utilizada para o armazenamento e gerenciamento de imagens externas utilizadas nas not\u00edcias.  </li> <li>Motivos da Escolha: </li> <li>Armazenamento Escal\u00e1vel: Imgur permite hospedar imagens sem limites de escalabilidade.  </li> <li>Baixo Custo: API gratuita com alto desempenho.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Armazenamento de imagens associadas a conte\u00fados externos e internos do aplicativo.</li> </ul>"},{"location":"arquitetura/#27-newsml","title":"2.7 NewsML","text":"<ul> <li>Descri\u00e7\u00e3o:   O NewsML \u00e9 um padr\u00e3o XML desenvolvido especificamente para jornalismo multim\u00eddia, permitindo a estrutura\u00e7\u00e3o e padroniza\u00e7\u00e3o de not\u00edcias.  </li> <li>Motivos da Escolha: </li> <li>Padroniza\u00e7\u00e3o: Facilita a exporta\u00e7\u00e3o e reutiliza\u00e7\u00e3o de not\u00edcias em outros sistemas jornal\u00edsticos.  </li> <li>Interoperabilidade: Permite integra\u00e7\u00e3o com bancos de dados e APIs externas.  </li> <li>Aplica\u00e7\u00e3o no Projeto: </li> <li>Armazenamento de not\u00edcias coletadas ou criadas no formato NewsML.  </li> <li>Convers\u00e3o autom\u00e1tica de dados provenientes das APIs externas.  </li> </ul> <p>Refer\u00eancia: GOMES, Rafael et al. Produ\u00e7\u00e3o de not\u00edcias multim\u00eddia para diferentes plataformas utilizando o padr\u00e3o NewsML. Dispon\u00edvel em: ./images/Producao_de_Noticias_Multimidia_para_Dif.pdf.  </p>"},{"location":"arquitetura/#3-conclusao","title":"3. Conclus\u00e3o","text":"<p>As ferramentas selecionadas foram escolhidas estrategicamente para atender aos requisitos de efici\u00eancia, escalabilidade e manuten\u00e7\u00e3o, a combina\u00e7\u00e3o de Firebase, React Native Expo e APIs externas proporciona uma solu\u00e7\u00e3o robusta, modular e resiliente. Al\u00e9m disso, o uso do NewsML garante que o conte\u00fado esteja estruturado, padronizado e pronto para exporta\u00e7\u00e3o a outros sistemas jornal\u00edsticos.</p> <p>Refer\u00eancia Principal: MOBLEY, R. Keith. Maintenance Engineering Handbook. 7th ed. McGraw-Hill Education, 2008.  </p>"},{"location":"banco_dados/","title":"Documento de Banco de Dados","text":""},{"location":"design/","title":"Documento de Arquitetura","text":"<p>A arquitetura do sistema Campus Multiplataforma foi projetada para suportar um aplicativo de jornalismo multim\u00eddia desenvolvido para o Laborat\u00f3rio de Jornalismo do Departamento de Comunica\u00e7\u00e3o da Universidade de Bras\u00edlia. Seu objetivo central \u00e9 unificar e centralizar conte\u00fados de v\u00e1rias plataformas (LinkedIn, Instagram, Twitter, TikTok, YouTube) em um \u00fanico aplicativo, al\u00e9m de permitir a publica\u00e7\u00e3o de not\u00edcias pr\u00f3prias no formato NewsML.  </p> <p>O sistema utiliza React Native com Expo para o desenvolvimento do front-end mobile e Firebase como principal provedor de servi\u00e7os em nuvem, como autentica\u00e7\u00e3o, armazenamento e banco de dados. Outras APIs externas s\u00e3o integradas para coletar e exibir conte\u00fado multim\u00eddia, como YouTube Data API v3, Instagram Graph API, TikTok API, Twitter API e Imgur API.</p> <p>A arquitetura foi projetada com os princ\u00edpios de simplicidade, modularidade e escalabilidade, aproveitando o paradigma serverless com Firebase para reduzir a complexidade de gerenciamento de infraestrutura.  </p>"},{"location":"design/#diagrama-geral-da-arquitetura","title":"Diagrama Geral da Arquitetura","text":"<p>O diagrama a seguir representa a arquitetura proposta para o sistema Campus Multiplataforma:  </p>"},{"location":"design/#componentes-principais","title":"Componentes Principais:","text":"<ol> <li>Front-End Mobile: </li> <li>Desenvolvido com React Native Expo.  </li> <li>Funcionalidade de interface do usu\u00e1rio.  </li> <li> <p>Comunica\u00e7\u00e3o direta com Firebase e APIs externas.  </p> </li> <li> <p>Backend Serverless (Firebase): </p> </li> <li>Autentica\u00e7\u00e3o via Firebase Authentication.  </li> <li>Armazenamento de not\u00edcias e conte\u00fados no formato NewsML no Firestore Database.  </li> <li> <p>Gerenciamento de arquivos (imagens) no Firebase Storage.  </p> </li> <li> <p>Integra\u00e7\u00e3o de APIs Externas: </p> </li> <li>YouTube Data API v3: Hospedagem e recupera\u00e7\u00e3o de v\u00eddeos de not\u00edcias.  </li> <li>Instagram Graph API: Incorpora\u00e7\u00e3o de postagens (imagens e v\u00eddeos curtos).  </li> <li>TikTok API: Incorpora\u00e7\u00e3o de v\u00eddeos curtos.  </li> <li>Twitter API: Incorpora\u00e7\u00e3o de tweets (imagens, v\u00eddeos e textos).  </li> <li> <p>Imgur API: Hospedagem e recupera\u00e7\u00e3o de imagens externas.  </p> </li> <li> <p>Formato NewsML: </p> </li> <li>Todas as not\u00edcias, sejam originadas no app ou coletadas via APIs externas, ser\u00e3o convertidas e armazenadas no formato NewsML.  </li> </ol>"},{"location":"design/#descricao-detalhada-dos-componentes","title":"Descri\u00e7\u00e3o Detalhada dos Componentes","text":""},{"location":"design/#front-end-mobile","title":"Front-End Mobile","text":"<ul> <li>Tecnologia: React Native com Expo e TypeScript.  </li> <li>Fun\u00e7\u00e3o Principal: Interface do usu\u00e1rio para consumir conte\u00fados e interagir com o sistema.  </li> <li>Detalhes T\u00e9cnicos: </li> <li>Comunica\u00e7\u00e3o com Firebase para acessar e armazenar dados.  </li> <li>Incorpora\u00e7\u00e3o de conte\u00fados de APIs externas (YouTube, Instagram, TikTok, Twitter) com integra\u00e7\u00e3o direta via requisi\u00e7\u00f5es HTTP.  </li> <li>Apresenta\u00e7\u00e3o dos dados formatados em NewsML ao usu\u00e1rio de forma amig\u00e1vel.  </li> <li>Integra\u00e7\u00e3o com o Firebase Authentication para gerenciar usu\u00e1rios e permiss\u00f5es.</li> </ul>"},{"location":"design/#backend-serverless-firebase","title":"Backend Serverless (Firebase)","text":"<ul> <li>Tecnologia: Firebase (Firestore, Storage, Authentication).  </li> <li>Fun\u00e7\u00e3o Principal: Fornecer uma infraestrutura escal\u00e1vel e sem servidor para gerenciar dados e usu\u00e1rios.  </li> <li>Detalhes T\u00e9cnicos: </li> <li>Firebase Authentication: Autentica\u00e7\u00e3o de usu\u00e1rios para acesso ao app.  </li> <li>Cloud Firestore: Armazenamento dos dados das not\u00edcias em formato NewsML, facilitando consultas e atualiza\u00e7\u00f5es.  </li> <li>Firebase Storage: Armazenamento de imagens internas do sistema.  </li> </ul>"},{"location":"design/#integracao-com-apis-externas","title":"Integra\u00e7\u00e3o com APIs Externas","text":"<p>O sistema incorpora conte\u00fados externos usando as seguintes APIs:  </p> <ul> <li>YouTube Data API v3: </li> <li>Fun\u00e7\u00e3o: Recuperar v\u00eddeos hospedados no YouTube e integr\u00e1-los ao aplicativo.  </li> <li> <p>Exemplo: V\u00eddeos de not\u00edcias produzidos pela equipe do laborat\u00f3rio.  </p> </li> <li> <p>Instagram Graph API: </p> </li> <li>Fun\u00e7\u00e3o: Incorporar postagens de imagens e v\u00eddeos curtos diretamente no app.  </li> <li> <p>Exemplo: Fotos ou v\u00eddeos de not\u00edcias compartilhados no Instagram.  </p> </li> <li> <p>TikTok API: </p> </li> <li>Fun\u00e7\u00e3o: Incorpora\u00e7\u00e3o de v\u00eddeos curtos diretamente no app.  </li> <li> <p>Exemplo: Not\u00edcias ou conte\u00fados de entretenimento produzidos no TikTok.  </p> </li> <li> <p>Twitter API: </p> </li> <li>Fun\u00e7\u00e3o: Recuperar tweets, incluindo textos, imagens e v\u00eddeos.  </li> <li> <p>Exemplo: Not\u00edcias relevantes compartilhadas no Twitter com formato multim\u00eddia.  </p> </li> <li> <p>Imgur API: </p> </li> <li>Fun\u00e7\u00e3o: Hospedagem de imagens de forma eficiente e externa.  </li> <li>Exemplo: Imagens utilizadas para compor not\u00edcias publicadas pelo laborat\u00f3rio.  </li> </ul> <p>Cada API ser\u00e1 acessada via requisi\u00e7\u00f5es HTTP, e os dados ser\u00e3o processados e armazenados no formato NewsML antes de serem apresentados no aplicativo.</p>"},{"location":"design/#aplicacao-do-formato-newsml","title":"Aplica\u00e7\u00e3o do Formato NewsML","text":""},{"location":"design/#o-que-e-newsml","title":"O que \u00e9 NewsML?","text":"<p>O NewsML (News Markup Language) \u00e9 um padr\u00e3o baseado em XML desenvolvido para representar not\u00edcias em formatos estruturados e multim\u00eddia. Ele foi projetado para possibilitar o interc\u00e2mbio padronizado de informa\u00e7\u00f5es jornal\u00edsticas entre sistemas e plataformas.  </p> <p>Caracter\u00edsticas Principais: - Suporte a textos, imagens, v\u00eddeos e metadados. - Compatibilidade com outros formatos como IPTC e XML. - Estrutura organizada e escal\u00e1vel para conte\u00fado jornal\u00edstico.</p> <p>Para entender a fundo o padr\u00e3o NewsML, utilize o artigo \u201cProdu\u00e7\u00e3o de Not\u00edcias Multim\u00eddia para Diferentes Plataformas Utilizando o Padr\u00e3o NewsML\u201d (dispon\u00edvel no ./images/Producao_de_Noticias_Multimidia_para_Dif.pdf).</p> <p>Refer\u00eancia ABNT: GOMES, Rafael et al. Produ\u00e7\u00e3o de not\u00edcias multim\u00eddia para diferentes plataformas utilizando o padr\u00e3o NewsML. In: Anais do Congresso Brasileiro de Jornalismo Digital. S\u00e3o Paulo: ABCD Editora, 2023. Dispon\u00edvel em: ./images/Producao_de_Noticias_Multimidia_para_Dif.pdf.</p>"},{"location":"design/#uso-do-newsml-no-projeto","title":"Uso do NewsML no Projeto","text":"<p>Todas as not\u00edcias, sejam elas produzidas internamente ou coletadas de plataformas externas (YouTube, Instagram, Twitter, TikTok), ser\u00e3o formatadas no padr\u00e3o NewsML. O formato permitir\u00e1: 1. Estrutura\u00e7\u00e3o dos dados (texto, imagem, v\u00eddeo e metadados). 2. Compatibilidade com outros sistemas jornal\u00edsticos. 3. Reuso dos dados em m\u00faltiplas plataformas.  </p> <p>Exemplo Simplificado de NewsML no Projeto: </p> <pre><code>&lt;newsItem&gt;\n  &lt;newsHeader&gt;\n    &lt;newsIdentifier&gt;12345&lt;/newsIdentifier&gt;\n    &lt;date&gt;2024-06-16&lt;/date&gt;\n    &lt;provider&gt;Campus Multiplataforma&lt;/provider&gt;\n  &lt;/newsHeader&gt;\n  &lt;contentSet&gt;\n    &lt;text&gt;Not\u00edcia relevante do Campus Multiplataforma...&lt;/text&gt;\n    &lt;image src=\"https://imgur.com/12345\" /&gt;\n    &lt;video src=\"https://youtube.com/video123\" /&gt;\n  &lt;/contentSet&gt;\n&lt;/newsItem&gt;\n</code></pre>"},{"location":"design/#estrategias-de-monitoramento-e-manutencao","title":"Estrat\u00e9gias de Monitoramento e Manuten\u00e7\u00e3o","text":"<p>Seguindo a Manuten\u00e7\u00e3o Centrada em Confiabilidade, o sistema implementar\u00e1 as seguintes estrat\u00e9gias:  </p> <ol> <li>Monitoramento Cont\u00ednuo:  </li> <li>Ferramentas como Firebase Performance Monitoring e Crashlytics ser\u00e3o usadas para rastrear problemas.  </li> <li> <p>Logs automatizados para identificar modos de falha em APIs externas.  </p> </li> <li> <p>Redund\u00e2ncia de Dados:  </p> </li> <li>Uso de cache local para conte\u00fados essenciais.  </li> <li> <p>Armazenamento de imagens cr\u00edticas tanto no Imgur quanto no Firebase Storage.  </p> </li> <li> <p>Facilidade de Atualiza\u00e7\u00f5es:  </p> </li> <li>Atualiza\u00e7\u00f5es OTA para o front-end.  </li> <li> <p>Deploy simplificado do backend no Firebase.  </p> </li> <li> <p>Preven\u00e7\u00e3o de Falhas Cr\u00edticas:  </p> </li> <li>Implementa\u00e7\u00e3o de timeouts e pol\u00edticas de retentativa (retry policies) nas chamadas HTTP para APIs externas.  </li> <li>Monitoramento de limites de taxa para evitar bloqueios (rate limiting).  </li> </ol>"},{"location":"design/#conclusao","title":"Conclus\u00e3o","text":"<p>A arquitetura proposta para o sistema Campus Multiplataforma foi desenvolvida com foco em modularidade, integra\u00e7\u00e3o eficiente e ado\u00e7\u00e3o de padr\u00f5es robustos como NewsML. A combina\u00e7\u00e3o de React Native Expo, Firebase e APIs externas garante escalabilidade, baixo custo operacional e facilidade de manuten\u00e7\u00e3o, alinhando-se \u00e0s boas pr\u00e1ticas de engenharia de software e </p>"},{"location":"equipe/","title":"Equipe do Projeto","text":"Pedro Fernandes \u00cdthalo Dekki Pedro Nascimento"},{"location":"guia_estilo/","title":"Guia de Estilo Visual","text":"<p>Este guia descreve os padr\u00f5es visuais do aplicativo, alinhados \u00e0 identidade do Campus Multiplataforma, com ajustes para melhorar a experi\u00eancia do usu\u00e1rio (UX/UI). Ele visa orientar o design de interfaces consistentes e acess\u00edveis.</p>"},{"location":"guia_estilo/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":"<p>Este documento adapta o Manual de Identidade Visual Campus Multiplataforma 2023.1 para um contexto digital interativo, respeitando a identidade visual original, mas com ajustes para garantir legibilidade, contraste e usabilidade em telas. Ele ser\u00e1 utilizado como refer\u00eancia para desenvolvedores e designers.</p>"},{"location":"guia_estilo/#2-paleta-de-cores","title":"2. Paleta de Cores","text":""},{"location":"guia_estilo/#cores-principais","title":"Cores Principais","text":"<p>As cores principais s\u00e3o utilizadas em elementos de destaque, como barras de navega\u00e7\u00e3o, bot\u00f5es e links importantes.</p> <p></p> Cor C\u00f3digo HEX Vermelho Vivo <code>#E74C3C</code> Laranja <code>#F39C12</code> Cinza Escuro <code>#2C3E50</code>"},{"location":"guia_estilo/#cores-secundarias","title":"Cores Secund\u00e1rias","text":"<p>Utilizadas para estados de hover, backgrounds e elementos decorativos.</p> Cor C\u00f3digo HEX Bege Claro <code>#F9F8EE</code> Rosa Suave <code>#F4BC99</code> Marrom Claro <code>#5A2C0A</code>"},{"location":"guia_estilo/#rejeicoes","title":"Rejei\u00e7\u00f5es","text":"<p>Evitar o uso das cores muito saturadas do manual original, como <code>#AB232E</code> e <code>#E66147</code>, pois comprometem a experi\u00eancia visual.</p>"},{"location":"guia_estilo/#3-tipografia","title":"3. Tipografia","text":""},{"location":"guia_estilo/#fontes-primarias","title":"Fontes Prim\u00e1rias","text":"<ul> <li>Open Sans: Para textos corridos e par\u00e1grafos.</li> <li>Roboto Slab: Para t\u00edtulos e destaques, variando entre pesos m\u00e9dios e bold.</li> </ul>"},{"location":"guia_estilo/#fontes-secundarias","title":"Fontes Secund\u00e1rias","text":"<ul> <li>Mali: Para se\u00e7\u00f5es mais descontra\u00eddas e elementos ilustrativos.</li> </ul> <p>Diretrizes de Uso: - Usar tamanhos relativos (rem) para garantir acessibilidade. - Evitar mais de duas fontes em uma mesma tela.</p>"},{"location":"guia_estilo/#4-elementos-visuais","title":"4. Elementos Visuais","text":""},{"location":"guia_estilo/#icones-e-ilustracoes","title":"\u00cdcones e Ilustra\u00e7\u00f5es","text":"<ul> <li>Estilo: \u00cdcones flat e minimalistas com inspira\u00e7\u00e3o autoral.</li> <li>Dimens\u00f5es: 24px para \u00edcones padr\u00e3o; 48px para \u00edcones de destaque.</li> <li>Aten\u00e7\u00e3o: Utilizar licen\u00e7as livres ou autorais para qualquer material externo.</li> </ul>"},{"location":"guia_estilo/#texturas-e-formas","title":"Texturas e Formas","text":"<ul> <li>Aplicar padr\u00f5es sutis (tonalidades baixas) para evitar distra\u00e7\u00f5es.</li> <li>Evitar texturas pesadas que comprometam a leitura.</li> </ul>"},{"location":"guia_estilo/#5-componentes-de-ui","title":"5. Componentes de UI","text":""},{"location":"guia_estilo/#botoes","title":"Bot\u00f5es","text":"Estado Cor de Fundo Cor do Texto Padr\u00e3o <code>#E74C3C</code> <code>#FFFFFF</code> Hover <code>#C0392B</code> <code>#FFFFFF</code> Desabilitado <code>#BDC3C7</code> <code>#7F8C8D</code>"},{"location":"guia_estilo/#campos-de-texto","title":"Campos de Texto","text":"Estado Borda Fundo Ativo <code>#3498DB</code> <code>#ECF0F1</code> Inativo <code>#BDC3C7</code> <code>#FFFFFF</code> Erro <code>#E74C3C</code> <code>#FDEDEC</code>"},{"location":"guia_estilo/#6-diretrizes-de-ux","title":"6. Diretrizes de UX","text":""},{"location":"guia_estilo/#contraste-e-acessibilidade","title":"Contraste e Acessibilidade","text":"<ul> <li>Garantir contraste m\u00ednimo de 4.5:1 para textos pequenos e 3:1 para textos grandes.</li> <li>Testar interfaces com ferramentas como Lighthouse ou Axe.</li> </ul>"},{"location":"guia_estilo/#feedback-ao-usuario","title":"Feedback ao Usu\u00e1rio","text":"<ul> <li>Usar notifica\u00e7\u00f5es contextuais para a\u00e7\u00f5es como salvar ou enviar dados.</li> <li>Indicar visualmente estados de carregamento e erros.</li> </ul>"},{"location":"guia_estilo/#responsividade","title":"Responsividade","text":"<ul> <li>Garantir compatibilidade para telas a partir de 320px de largura.</li> <li>Utilizar grids flex\u00edveis (CSS Grid ou Flexbox).</li> </ul> <p>Nota: Este guia deve ser revisado periodicamente para incorporar avan\u00e7os em padr\u00f5es de UX/UI e feedback dos usu\u00e1rios.</p>"},{"location":"imgur/","title":"Imgur API","text":""},{"location":"imgur/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A configura\u00e7\u00e3o e integra\u00e7\u00e3o da Imgur API permite o upload de imagens e gerenciamento de galerias de forma simples e eficiente. Utilizando autentica\u00e7\u00e3o via OAuth 2.0, a API possibilita que os jornalistas fa\u00e7am o upload de imagens diretamente para o aplicativo. </p> <p>Essa documenta\u00e7\u00e3o aborda a integra\u00e7\u00e3o do Imgur API para upload de imagens, compress\u00e3o/descompress\u00e3o nativa de imagens no app e como integrar essas imagens em um formato NewsML, analisando tamb\u00e9m o impacto na performance.</p> <p>A seguir, a configura\u00e7\u00e3o do ambiente, as funcionalidades de upload e leitura de dados, al\u00e9m de estimativas do uso da API para an\u00e1lise de viabilidade. Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o oficial da Imgur API.</p>"},{"location":"imgur/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"imgur/#criacao-de-conta-imgur","title":"Cria\u00e7\u00e3o de Conta Imgur","text":"<ol> <li>Acesse o site do Imgur e crie uma conta.</li> <li>Registre seu aplicativo no Portal de Desenvolvedores da Imgur para obter o Client ID e Client Secret.</li> </ol>"},{"location":"imgur/#obtencao-do-token-de-acesso","title":"Obten\u00e7\u00e3o do Token de Acesso","text":"<p>Para autentica\u00e7\u00e3o via OAuth 2.0, siga o processo para obter um Access Token com permiss\u00f5es adequadas. Mais detalhes no guia de autentica\u00e7\u00e3o da Imgur.</p>"},{"location":"imgur/#funcionalidades-da-imgur-api","title":"Funcionalidades da Imgur API","text":""},{"location":"imgur/#upload-de-imagens","title":"Upload de Imagens","text":"<ul> <li>Endpoint: <code>POST https://api.imgur.com/3/upload</code></li> <li>Autentica\u00e7\u00e3o: Adicione o Access Token no cabe\u00e7alho da requisi\u00e7\u00e3o.</li> </ul>"},{"location":"imgur/#exemplo-de-codigo-para-upload-publico","title":"Exemplo de C\u00f3digo para Upload P\u00fablico:","text":"<pre><code>import axios from 'axios';\n\nasync function uploadImage(imageUri) {\n  const formData = new FormData();\n  formData.append('image', {\n    uri: imageUri,\n    name: 'image.jpg',\n    type: 'image/jpeg',\n  });\n\n  const response = await axios.post('https://api.imgur.com/3/upload', formData, {\n    headers: {\n      Authorization: 'Bearer SEU_ACCESS_TOKEN',\n    },\n  });\n\n  return response.data.data.link; // Retorna o link p\u00fablico\n}\n</code></pre>"},{"location":"imgur/#exemplo-de-codigo-para-upload-privado","title":"Exemplo de C\u00f3digo para Upload Privado:","text":"<pre><code>async function uploadPrivateImage(imageUri) {\n  const formData = new FormData();\n  formData.append('image', {\n    uri: imageUri,\n    name: 'image.jpg',\n    type: 'image/jpeg',\n  });\n\n  const response = await axios.post('https://api.imgur.com/3/upload', formData, {\n    headers: {\n      Authorization: 'Bearer SEU_ACCESS_TOKEN',\n    },\n    params: {\n      privacy: 'hidden', // Torna a imagem privada\n    },\n  });\n\n  return response.data.data.link; // Retorna o link privado\n}\n</code></pre>"},{"location":"imgur/#coleta-de-informacoes-sobre-imagens","title":"Coleta de Informa\u00e7\u00f5es sobre Imagens","text":"<ul> <li>Endpoint: <code>GET https://api.imgur.com/3/account/{username}/images</code></li> <li>Autentica\u00e7\u00e3o: Adicione o Access Token.</li> </ul>"},{"location":"imgur/#exemplo-de-codigo","title":"Exemplo de C\u00f3digo:","text":"<pre><code>async function fetchUserImages(username) {\n  const response = await axios.get(`https://api.imgur.com/3/account/${username}/images`, {\n    headers: {\n      Authorization: 'Bearer SEU_ACCESS_TOKEN',\n    },\n  });\n\n  return response.data.data; // Retorna as imagens do usu\u00e1rio\n}\n</code></pre>"},{"location":"imgur/#compressao-e-descompressao-de-imagens-nativa","title":"Compress\u00e3o e Descompress\u00e3o de Imagens Nativa","text":""},{"location":"imgur/#compressao-de-imagens","title":"Compress\u00e3o de Imagens","text":"<p>Utilize a biblioteca react-native-image-crop-picker para comprimir as imagens diretamente no dispositivo, reduzindo seu tamanho sem perder qualidade excessiva.</p> <pre><code>import ImagePicker from 'react-native-image-crop-picker';\n\nasync function compressImage(imageUri) {\n  const compressedImage = await ImagePicker.openCropper({\n    path: imageUri,\n    width: 800,\n    height: 800,\n    compressImageQuality: 0.7, // Ajuste da compress\u00e3o\n  });\n\n  return compressedImage.path;\n}\n</code></pre>"},{"location":"imgur/#descompressao-de-imagens","title":"Descompress\u00e3o de Imagens","text":"<p>Para restaurar a imagem ao seu tamanho original ap\u00f3s compress\u00e3o, use react-native-image-resizer.</p> <pre><code>import ImageResizer from 'react-native-image-resizer';\n\nasync function decompressImage(compressedUri) {\n  const decompressedImage = await ImageResizer.createResizedImage(\n    compressedUri,\n    1600, // Largura\n    1600, // Altura\n    'JPEG',\n    100   // Qualidade\n  );\n\n  return decompressedImage.uri;\n}\n</code></pre>"},{"location":"imgur/#impacto-na-performance","title":"Impacto na Performance","text":"<ul> <li>Compress\u00e3o: A compress\u00e3o de imagens no dispositivo pode aumentar o uso de CPU, especialmente em dispositivos com hardware limitado. Use t\u00e9cnicas ass\u00edncronas para n\u00e3o bloquear a interface do usu\u00e1rio.</li> <li>Descompress\u00e3o: Similarmente, a descompress\u00e3o de imagens pode exigir recursos significativos, mas a diferen\u00e7a de performance ser\u00e1 menos percept\u00edvel em imagens menores ou dispositivos mais potentes.</li> </ul> <p>Recomenda-se medir o tempo de processamento para garantir que a compress\u00e3o/descompress\u00e3o n\u00e3o afete negativamente a experi\u00eancia do usu\u00e1rio.</p>"},{"location":"imgur/#integracao-com-newsml","title":"Integra\u00e7\u00e3o com NewsML","text":""},{"location":"imgur/#formato-newsml","title":"Formato NewsML","text":"<p>O NewsML \u00e9 um formato padr\u00e3o para armazenamento e troca de not\u00edcias, utilizado por diversas organiza\u00e7\u00f5es de m\u00eddia. A seguir, mostramos como integrar as imagens enviadas para o Imgur ou Firebase no formato NewsML.</p>"},{"location":"imgur/#exemplo-de-newsml-com-imgur","title":"Exemplo de NewsML com Imgur:","text":"<pre><code>&lt;NewsItem&gt;\n  &lt;Identification&gt;\n    &lt;NewsIdentifier&gt;unique-news-id&lt;/NewsIdentifier&gt;\n  &lt;/Identification&gt;\n  &lt;NewsComponent&gt;\n    &lt;Headline&gt;T\u00edtulo da Not\u00edcia&lt;/Headline&gt;\n    &lt;Text&gt;\n      &lt;Paragraph&gt;Este \u00e9 o conte\u00fado da not\u00edcia.&lt;/Paragraph&gt;\n    &lt;/Text&gt;\n    &lt;ContentItem MediaType=\"image\" Source=\"https://i.imgur.com/imagem.jpg\"/&gt;\n  &lt;/NewsComponent&gt;\n&lt;/NewsItem&gt;\n</code></pre>"},{"location":"imgur/#exemplo-de-newsml-com-firebase-storage","title":"Exemplo de NewsML com Firebase Storage:","text":"<pre><code>&lt;NewsItem&gt;\n  &lt;Identification&gt;\n    &lt;NewsIdentifier&gt;unique-news-id&lt;/NewsIdentifier&gt;\n  &lt;/Identification&gt;\n  &lt;NewsComponent&gt;\n    &lt;Headline&gt;T\u00edtulo da Not\u00edcia&lt;/Headline&gt;\n    &lt;Text&gt;\n      &lt;Paragraph&gt;Este \u00e9 o conte\u00fado da not\u00edcia.&lt;/Paragraph&gt;\n    &lt;/Text&gt;\n    &lt;ContentItem MediaType=\"image\" Source=\"https://firebasestorage.googleapis.com/v0/b/seu-app.appspot.com/o/imagem.jpg?alt=media\"/&gt;\n  &lt;/NewsComponent&gt;\n&lt;/NewsItem&gt;\n</code></pre>"},{"location":"imgur/#upload-de-arquivo-newsml","title":"Upload de Arquivo NewsML","text":"<p>Voc\u00ea pode usar Firebase Storage ou qualquer outro servi\u00e7o para armazenar e enviar arquivos NewsML.</p>"},{"location":"imgur/#estimativas-de-uso","title":"Estimativas de Uso","text":"<ul> <li>Cotas Gratuitas Imgur:</li> <li>50 uploads di\u00e1rios.</li> <li> <p>Limite de Tamanho: 10 MB por imagem.</p> </li> <li> <p>Cotas Gratuitas Firebase:</p> </li> <li>5 GB de armazenamento e 1 GB de download mensal gratuito.</li> <li>Ap\u00f3s ultrapassar esses limites, voc\u00ea ser\u00e1 cobrado de acordo com os pre\u00e7os do Firebase.</li> </ul>"},{"location":"imgur/#pros-e-contras","title":"Pr\u00f3s e Contras","text":""},{"location":"imgur/#pros","title":"Pr\u00f3s","text":"<ul> <li>Imgur: Simples de usar, permite tanto uploads p\u00fablicos quanto privados, e oferece uma boa quantidade de uploads di\u00e1rios gratuitamente.<ul> <li>Gratuito: O Imgur fornece armazenamento de imagens sem custo adicional.</li> <li>Simplicidade: API f\u00e1cil de integrar e bem documentada.</li> <li>Escalabilidade: Suporte a grandes volumes de imagens.</li> </ul> </li> <li>Firebase: Excelente para armazenamento escal\u00e1vel e f\u00e1cil integra\u00e7\u00e3o com outras funcionalidades do Firebase.</li> </ul>"},{"location":"imgur/#contras","title":"Contras","text":"<ul> <li>Imgur: Limita\u00e7\u00e3o de 50 uploads di\u00e1rios e tamanho de 10 MB por imagem.<ul> <li>Limita\u00e7\u00e3o de Cota: A cota gratuita pode ser limitada.</li> <li>Privacidade Limitada: Depend\u00eancia das configura\u00e7\u00f5es de privacidade do Imgur.</li> </ul> </li> <li>Firebase: Pode ser caro para grandes volumes de armazenamento ou downloads frequentes.</li> </ul> <p>Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o oficial da Imgur API.</p>"},{"location":"links_uteis/","title":"Links uteis","text":"<p>Para a aplica\u00e7\u00e3o do NewsML, o projeto utiliza as orienta\u00e7\u00f5es do artigo: GOMES, Rafael et al. Produ\u00e7\u00e3o de not\u00edcias multim\u00eddia para diferentes plataformas utilizando o padr\u00e3o NewsML. Dispon\u00edvel em: PDF</p>"},{"location":"prototipo/","title":"Prot\u00f3tipo","text":""},{"location":"publicacoes/","title":"Publica\u00e7\u00f5es","text":""},{"location":"publicacoes/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Esta documenta\u00e7\u00e3o detalha como configurar e integrar o YouTube Data API v3, Firebase e o formato NewsML no seu app, permitindo o upload de v\u00eddeos, coleta de analytics e armazenamento estruturado de dados jornal\u00edsticos. Utilizamos uma Conta de Servi\u00e7o para autentica\u00e7\u00e3o segura e simplificada.</p> <p></p>"},{"location":"publicacoes/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"publicacoes/#1-youtube-data-api-no-google-cloud","title":"1. YouTube Data API no Google Cloud","text":"<ol> <li>Acesse o Google Cloud Console.</li> <li>Crie um novo projeto e ative a YouTube Data API v3.</li> <li>Configure uma Conta de Servi\u00e7o:</li> <li>V\u00e1 para APIs e Servi\u00e7os &gt; Credenciais.</li> <li>Clique em Criar credenciais e selecione Conta de Servi\u00e7o.</li> <li>Conceda as permiss\u00f5es necess\u00e1rias para acessar a YouTube Data API.</li> <li>Baixe o arquivo JSON da conta de servi\u00e7o para uso no c\u00f3digo.</li> </ol> <p>Mais informa\u00e7\u00f5es: Documenta\u00e7\u00e3o de OAuth 2.0 - Conta de Servi\u00e7o.</p>"},{"location":"publicacoes/#2-configuracao-do-firebase","title":"2. Configura\u00e7\u00e3o do Firebase","text":"<ol> <li>Configure o Firestore para armazenar os metadados e analytics dos v\u00eddeos.</li> <li>Instale as depend\u00eancias Firebase no React Native:    <code>bash    npm install @react-native-firebase/app @react-native-firebase/firestore @react-native-firebase/storage</code></li> <li>Siga a documenta\u00e7\u00e3o oficial do Firebase para configurar o projeto.</li> </ol>"},{"location":"publicacoes/#funcionalidades-e-fluxo","title":"Funcionalidades e Fluxo","text":""},{"location":"publicacoes/#upload-de-videos","title":"Upload de V\u00eddeos","text":"<ul> <li>Endpoint: <code>videos.insert</code></li> <li>Consumo: 1.600 unidades por upload.</li> </ul> <p>Passos: 1. O jornalista seleciona um v\u00eddeo no app. 2. O app autentica com a Conta de Servi\u00e7o e envia o v\u00eddeo para o YouTube. 3. O ID do v\u00eddeo e metadados s\u00e3o armazenados no Firebase Firestore.</p> <p>Exemplo de C\u00f3digo:</p> <pre><code>import axios from 'axios';\n\nasync function uploadVideo(videoFile, accessToken) {\n  const formData = new FormData();\n  formData.append('file', {\n    uri: videoFile.uri,\n    name: 'video.mp4',\n    type: 'video/mp4',\n  });\n\n  const response = await axios.post(\n    'https://www.googleapis.com/upload/youtube/v3/videos?uploadType=resumable&amp;part=snippet,status',\n    {\n      snippet: {\n        title: 'T\u00edtulo da Mat\u00e9ria',\n        description: 'Descri\u00e7\u00e3o da mat\u00e9ria.',\n        tags: ['not\u00edcia', 'jornalismo'],\n        categoryId: '22',\n      },\n      status: {\n        privacyStatus: 'unlisted',\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  return response.data.id; // Retorna o ID do v\u00eddeo\n}\n</code></pre>"},{"location":"publicacoes/#upload-de-imagens-no-imgur","title":"Upload de Imagens no Imgur","text":"<ul> <li>Endpoint: <code>https://api.imgur.com/3/upload</code></li> <li>Autentica\u00e7\u00e3o: Token da conta Imgur (Bearer Token).</li> </ul> <p>Exemplo de C\u00f3digo:</p> <pre><code>import axios from 'axios';\n\nasync function uploadImageToImgur(imageUri) {\n  const formData = new FormData();\n  formData.append('image', {\n    uri: imageUri,\n    name: 'image.jpg',\n    type: 'image/jpeg',\n  });\n\n  const response = await axios.post(\n    'https://api.imgur.com/3/upload',\n    formData,\n    {\n      headers: {\n        Authorization: 'Bearer SEU_IMGUR_TOKEN',\n      },\n    }\n  );\n\n  return response.data.data.link; // Retorna o link da imagem\n}\n</code></pre>"},{"location":"publicacoes/#coleta-de-analytics","title":"Coleta de Analytics","text":"<ul> <li>Endpoint: <code>videos.list</code></li> <li>Consumo: 1 unidade por v\u00eddeo.</li> </ul> <p>Passos: 1. Agende uma fun\u00e7\u00e3o para consultar m\u00e9tricas dos v\u00eddeos diariamente. 2. Atualize os metadados no Firestore.</p> <p>Exemplo de C\u00f3digo:</p> <pre><code>import axios from 'axios';\n\nasync function fetchVideoAnalytics(videoIds, accessToken) {\n  const response = await axios.get('https://www.googleapis.com/youtube/v3/videos', {\n    params: {\n      id: videoIds.join(','),\n      part: 'statistics',\n    },\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  return response.data.items.map((item) =&gt; ({\n    id: item.id,\n    views: item.statistics.viewCount,\n    likes: item.statistics.likeCount,\n    comments: item.statistics.commentCount,\n  }));\n}\n</code></pre>"},{"location":"publicacoes/#publicacao-de-noticias-multimidia-com-newsml","title":"Publica\u00e7\u00e3o de Not\u00edcias Multim\u00eddia com NewsML","text":"<p>O NewsML permite criar not\u00edcias estruturadas com suporte para texto, imagens e v\u00eddeos. Vamos usar o Firebase Storage para armazenar arquivos XML do NewsML e os recursos multim\u00eddia.</p> <p>Formato de Exemplo NewsML:</p> <pre><code>&lt;NewsItem&gt;\n  &lt;Identification&gt;\n    &lt;NewsIdentifier&gt;unique-news-id&lt;/NewsIdentifier&gt;\n  &lt;/Identification&gt;\n  &lt;NewsComponent&gt;\n    &lt;Headline&gt;T\u00edtulo da Not\u00edcia&lt;/Headline&gt;\n    &lt;Text&gt;\n      &lt;Paragraph&gt;Este \u00e9 o conte\u00fado textual da not\u00edcia.&lt;/Paragraph&gt;\n    &lt;/Text&gt;\n    &lt;ContentItem MediaType=\"image\" Source=\"https://i.imgur.com/imagem.jpg\"/&gt;\n    &lt;ContentItem MediaType=\"video\" Source=\"https://www.youtube.com/watch?v=video-id\"/&gt;\n  &lt;/NewsComponent&gt;\n&lt;/NewsItem&gt;\n</code></pre> <p>Upload de Arquivo NewsML:</p> <pre><code>import storage from '@react-native-firebase/storage';\n\nasync function uploadNewsML(fileUri, newsId) {\n  const ref = storage().ref(`/news-xml/${newsId}.xml`);\n  await ref.putFile(fileUri);\n  return ref.getDownloadURL(); // Retorna a URL do arquivo\n}\n</code></pre> <p>Salvar Metadados no Firestore:</p> <pre><code>import firestore from '@react-native-firebase/firestore';\n\nasync function saveNewsMetadata(newsId, metadata) {\n  await firestore().collection('news').doc(newsId).set(metadata);\n}\n\nconst metadata = {\n  title: 'T\u00edtulo da Not\u00edcia',\n  author: 'Jornalista X',\n  createdAt: new Date(),\n  contentUrl: 'URL do arquivo XML',\n};\n\nsaveNewsMetadata('unique-news-id', metadata);\n</code></pre>"},{"location":"publicacoes/#leitura-de-noticias-no-app","title":"Leitura de Not\u00edcias no App","text":"<p>Fluxo: 1. O app recupera os metadados e links de m\u00eddia do Firestore. 2. Renderiza o conte\u00fado textual e carrega as m\u00eddias vinculadas.</p> <p>Exemplo de Renderiza\u00e7\u00e3o:</p> <pre><code>import React from 'react';\nimport { Text, Image, View } from 'react-native';\nimport YoutubePlayer from 'react-native-youtube-iframe';\n\nfunction NewsArticle({ newsData }) {\n  return (\n    &lt;View&gt;\n      &lt;Text&gt;{newsData.title}&lt;/Text&gt;\n      &lt;Text&gt;{newsData.content}&lt;/Text&gt;\n      &lt;Image source={{ uri: newsData.image }} style={{ width: 300, height: 200 }} /&gt;\n      &lt;YoutubePlayer height={200} play={false} videoId={newsData.videoId} /&gt;\n    &lt;/View&gt;\n  );\n}\n</code></pre>"},{"location":"publicacoes/#estimativa-e-tabela-de-consumo","title":"Estimativa e Tabela de Consumo","text":"Atividade Custo por A\u00e7\u00e3o Unidades Totais por Dia Capacidade Di\u00e1ria Upload de V\u00eddeos 1.600/unidade 9.600 At\u00e9 6 v\u00eddeos Coleta de Analytics 1/unidade 400 (para 400 v\u00eddeos) Estat\u00edsticas de 400 v\u00eddeos gerenciados"},{"location":"publicacoes/#pros-e-contras","title":"Pr\u00f3s e Contras","text":""},{"location":"publicacoes/#pros","title":"Pr\u00f3s","text":"<ul> <li>Gratuito: O YouTube fornece armazenamento e streaming otimizados sem custo adicional.</li> <li>Simplicidade: APIs bem documentadas para upload e gerenciamento.</li> <li>Escalabilidade: Suporte a grandes volumes de v\u00eddeos com coleta eficiente de analytics.</li> </ul>"},{"location":"publicacoes/#contras","title":"Contras","text":"<ul> <li>Limita\u00e7\u00e3o de Cota: Restri\u00e7\u00e3o de 10.000 unidades di\u00e1rias pode ser um gargalo em alta demanda.</li> <li>Responsabilidade Centralizada: Todos os v\u00eddeos est\u00e3o vinculados a uma \u00fanica conta.</li> <li>Privacidade Limitada: Depend\u00eancia das configura\u00e7\u00f5es de privacidade do YouTube.</li> </ul> <p>Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o oficial da YouTube Data API.</p>"},{"location":"referencias/","title":"Referencias","text":"<p>Para a aplica\u00e7\u00e3o do NewsML, o projeto utiliza as orienta\u00e7\u00f5es do artigo: GOMES, Rafael et al. Produ\u00e7\u00e3o de not\u00edcias multim\u00eddia para diferentes plataformas utilizando o padr\u00e3o NewsML. Dispon\u00edvel em: PDF</p>"},{"location":"requisitos/","title":"An\u00e1lise de Requisitos","text":""},{"location":"requisitos/#objetivo-do-projeto","title":"Objetivo do Projeto","text":"<p>O objetivo do projeto Campus Multiplataforma \u00e9 centralizar a comunica\u00e7\u00e3o acad\u00eamica e not\u00edcias do Jornal Campus Multiplataforma, desenvolvido na disciplina Campus Multim\u00eddia do Departamento de Jornalismo da Universidade de Bras\u00edlia (UnB). A plataforma tem como prop\u00f3sito:</p> <ul> <li>Facilitar a dissemina\u00e7\u00e3o de informa\u00e7\u00f5es acad\u00eamicas e eventos importantes para a comunidade universit\u00e1ria.</li> <li>Proporcionar uma experi\u00eancia de usu\u00e1rio otimizada, com um feed din\u00e2mico e op\u00e7\u00f5es de personaliza\u00e7\u00e3o.</li> </ul>"},{"location":"requisitos/#problemas-e-necessidades-da-empresa","title":"Problemas e Necessidades da Empresa","text":"<p>O jornal enfrenta os seguintes desafios de comunica\u00e7\u00e3o que o projeto visa resolver:</p> <ul> <li>Unifica\u00e7\u00e3o das informa\u00e7\u00f5es: O jornal possui diversos canais de comunica\u00e7\u00e3o, mas muitos s\u00e3o desconectados. A centraliza\u00e7\u00e3o das informa\u00e7\u00f5es em uma \u00fanica plataforma facilitar\u00e1 o acesso e a atualiza\u00e7\u00e3o constante.</li> <li>Facilidade na cria\u00e7\u00e3o e publica\u00e7\u00e3o de not\u00edcias: A cria\u00e7\u00e3o de conte\u00fado pela equipe de jornalismo \u00e9 lenta e depende de processos manuais, impactando a efici\u00eancia na dissemina\u00e7\u00e3o de informa\u00e7\u00f5es.</li> <li>Acompanhamento de eventos em tempo real: Os alunos enfrentam dificuldades em se atualizar com eventos, not\u00edcias e comunicados de maneira \u00e1gil.</li> <li>Falta de ferramentas interativas e de m\u00eddia visual: O sistema de comunica\u00e7\u00e3o atual utiliza v\u00eddeos curtos ou recursos interativos de maneira ineficaz, limitando o engajamento da comunidade.</li> </ul>"},{"location":"requisitos/#requisitos-funcionais","title":"Requisitos Funcionais","text":"<p>Os requisitos funcionais definem as funcionalidades que o sistema deve ter para atender \u00e0s necessidades do usu\u00e1rio. Os requisitos identificados para o Campus Multiplataforma s\u00e3o:</p> <ul> <li>RF01: Rep\u00f3rteres e editores jornalistas devem poder criar e publicar not\u00edcias, incluindo t\u00edtulo, descri\u00e7\u00e3o, imagens, v\u00eddeos, links anexados e tags de categoriza\u00e7\u00e3o.</li> <li>RF02: Usu\u00e1rios poder\u00e3o curtir, comentar e compartilhar conte\u00fados publicados, promovendo engajamento e intera\u00e7\u00e3o.</li> <li>RF03: Administradores e editores devem ter ferramentas para revisar e aprovar conte\u00fados antes de sua publica\u00e7\u00e3o, com um sistema de modera\u00e7\u00e3o integrado.</li> <li>RF04: O sistema dever\u00e1 exibir um feed din\u00e2mico de not\u00edcias e v\u00eddeos, organizados de forma cronol\u00f3gica ou personalizada com base nos interesses do usu\u00e1rio (via algoritmo).</li> <li>RF05: O sistema permitir\u00e1 que os jornalistas tenham acesso a m\u00e9tricas e an\u00e1lises, fornecendo um feedback detalhado.</li> </ul>"},{"location":"requisitos/#requisitos-nao-funcionais","title":"Requisitos N\u00e3o Funcionais","text":"<p>Os requisitos n\u00e3o funcionais se referem a caracter\u00edsticas qualitativas do sistema, como desempenho, usabilidade e seguran\u00e7a:</p> <ul> <li>RNF01: A aplica\u00e7\u00e3o deve ser responsiva, funcionando adequadamente em dispositivos m\u00f3veis Android e iOS.</li> <li>RNF02: O sistema deve ser confi\u00e1vel, com tempo de atividade (uptime) de 99,9%.</li> <li>RNF03: Arquitetura modular, permitindo escalabilidade e manuten\u00e7\u00e3o eficiente.</li> <li>RNF04: O tempo de carregamento das p\u00e1ginas deve ser inferior a 10 segundos.</li> <li>RNF05: O sistema deve suportar at\u00e9 2.000 usu\u00e1rios simult\u00e2neos.</li> <li>RNF06: A plataforma deve ser capaz de lidar com v\u00eddeos, imagens e links de maneira eficiente, com backup e recupera\u00e7\u00e3o de dados.</li> </ul>"},{"location":"requisitos/#regras-de-negocio","title":"Regras de Neg\u00f3cio","text":"<p>As regras de neg\u00f3cio definem os crit\u00e9rios e processos que governam o sistema. As principais regras para o Campus Multiplataforma s\u00e3o:</p> <ul> <li>RN01: O limite de dura\u00e7\u00e3o dos v\u00eddeos ser\u00e1 determinado pela plataforma onde o v\u00eddeo foi postado.</li> <li>RN02: Conte\u00fados que violem regras acad\u00eamicas (como linguagem ofensiva) ser\u00e3o removidos automaticamente ou ap\u00f3s modera\u00e7\u00e3o.</li> <li>RN03: Somente usu\u00e1rios autenticados (com login) podem curtir, comentar e compartilhar conte\u00fado.</li> <li>RN04: O envio de not\u00edcias ser\u00e1 limitado a 25 MB por arquivo.</li> <li>RN05: Cada not\u00edcia ou v\u00eddeo publicado deve conter data, hor\u00e1rio e autor vis\u00edveis para os usu\u00e1rios.</li> <li>RN06: O sistema deve bloquear tentativas de spam, como envio repetitivo de conte\u00fados id\u00eanticos em um curto per\u00edodo de tempo.</li> <li>RN07: Not\u00edcias publicadas n\u00e3o poder\u00e3o ser editadas ap\u00f3s a aprova\u00e7\u00e3o, apenas desativadas ou substitu\u00eddas por novas vers\u00f5es.</li> <li>RN08: Coment\u00e1rios que contenham palavras de baixo cal\u00e3o ou ofensivas ser\u00e3o automaticamente filtrados e ocultados.</li> <li>RN09: Apenas jornalistas autorizados poder\u00e3o criar not\u00edcias oficiais.</li> <li>RN10: O sistema dever\u00e1 permitir que jornalistas e administradores revisem conte\u00fados antes da publica\u00e7\u00e3o, conforme as diretrizes de conte\u00fado da disciplina Campus Multim\u00eddia.</li> </ul>"},{"location":"requisitos/#restricoes","title":"Restri\u00e7\u00f5es","text":"<p>O desenvolvimento do Campus Multiplataforma est\u00e1 sujeito \u00e0s seguintes restri\u00e7\u00f5es:</p> <ul> <li>Prazo de entrega: O sistema precisa ser entregue em at\u00e9 6 meses.</li> <li>Tecnologia: O sistema ser\u00e1 desenvolvido utilizando uma arquitetura modular com tecnologias como React Native, NestJS, e Firebase para hospedagem.</li> <li>Compatibilidade: A plataforma deve ser compat\u00edvel com dispositivos m\u00f3veis Android e iOS.</li> <li>Hospedagem e armazenamento: A aplica\u00e7\u00e3o ser\u00e1 hospedada no Firebase, com limite de 5 GB de armazenamento.</li> <li>Tecnologia de publica\u00e7\u00e3o de not\u00edcias: O sistema adotar\u00e1 o NewsML como padr\u00e3o para estrutura\u00e7\u00e3o das not\u00edcias.</li> </ul>"},{"location":"requisitos/#metodologia-de-coleta-e-analise-de-requisitos","title":"Metodologia de Coleta e An\u00e1lise de Requisitos","text":"<p>A coleta e an\u00e1lise de requisitos foi realizada com base em entrevistas com stakeholders e no acompanhamento das atividades da disciplina \"Campus Multiplataforma\". A metodologia seguiu as etapas descritas abaixo:</p>"},{"location":"requisitos/#1-identificacao-de-stakeholders","title":"1. Identifica\u00e7\u00e3o de Stakeholders","text":"<p>Foram identificadas as partes interessadas no projeto, como usu\u00e1rios, rep\u00f3rteres, editores e demais membros da comunidade acad\u00eamica.</p>"},{"location":"requisitos/#2-coleta-de-requisitos","title":"2. Coleta de Requisitos","text":"<p>A coleta de requisitos foi realizada por meio de entrevistas com os estudantes da disciplina de jornalismo, desenvolvedores da vers\u00e3o anterior do aplicativo e usu\u00e1rios finais. Foram discutidas as necessidades em rela\u00e7\u00e3o \u00e0 comunica\u00e7\u00e3o, cria\u00e7\u00e3o de conte\u00fado e engajamento com a plataforma.</p>"},{"location":"requisitos/#3-analise-e-especificacao-de-requisitos","title":"3. An\u00e1lise e Especifica\u00e7\u00e3o de Requisitos","text":"<p>A equipe analisou os requisitos coletados, identificou inconsist\u00eancias e priorizou as funcionalidades que deveriam ser inclu\u00eddas na vers\u00e3o inicial (MVP) do sistema.</p>"},{"location":"requisitos/#4-validacao-dos-requisitos","title":"4. Valida\u00e7\u00e3o dos Requisitos","text":"<p>Os requisitos foram validados com as partes interessadas para garantir sua completude e ader\u00eancia \u00e0s necessidades reais dos usu\u00e1rios.</p>"},{"location":"requisitos/#5-priorizacao-dos-requisitos","title":"5. Prioriza\u00e7\u00e3o dos Requisitos","text":"<p>Foi adotada a abordagem MoSCoW (Must have, Should have, Could have, Won't have) para classificar os requisitos e garantir que as funcionalidades essenciais fossem atendidas na primeira vers\u00e3o do sistema.</p>"},{"location":"youtube/","title":"YouTube Data API v3","text":""},{"location":"youtube/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>A configura\u00e7\u00e3o e integra\u00e7\u00e3o do YouTube Data API v3, permite o upload de v\u00eddeos, coleta de analytics e armazenamento estruturado de dados jornal\u00edsticos. </p> <p>Utilizando uma Conta de Servi\u00e7o para autentica\u00e7\u00e3o segura e simplificada, permitindo que todos os jornalistas (editores e rep\u00f3rteres) utilizem a autentica\u00e7\u00e3o do pr\u00f3pio aplicativo para publica\u00e7\u00e3o de videos em uma \u00fanica conta, podendo fazer publica\u00e7\u00e3o de videos n\u00e3o listados (visualiza\u00e7\u00e3o somente pelo app) e videos p\u00fablicos (visualiza\u00e7\u00e3o pelo app e pelo pr\u00f3pio youtube). </p> <p>Os metadados do v\u00eddeo (contagem de likes e visualiza\u00e7\u00f5es), s\u00e3o fornecidos por um endpoint do YouTube Data API v3 e armazenados no Firestore.</p> <p>Segue a ilustra\u00e7\u00e3o do Fluxo OAuth 2.0 com Conta de Servi\u00e7o, a Configura\u00e7\u00e3o do ambiente, exemplo de funcionalidades de cria\u00e7\u00e3o e leituras dos dados armazenados, finalizando com as estimativas do uso da API para uma an\u00e1lise de viabilidade. Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o oficial da YouTube Data API.</p> <p></p>"},{"location":"youtube/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":""},{"location":"youtube/#1-youtube-data-api-no-google-cloud","title":"1. YouTube Data API no Google Cloud","text":"<ol> <li>Acesse o Google Cloud Console.</li> <li>Crie um novo projeto e ative a YouTube Data API v3.</li> <li>Configure uma Conta de Servi\u00e7o:</li> <li>V\u00e1 para APIs e Servi\u00e7os &gt; Credenciais.</li> <li>Clique em Criar credenciais e selecione Conta de Servi\u00e7o.</li> <li>Conceda as permiss\u00f5es necess\u00e1rias para acessar a YouTube Data API.</li> <li>Baixe o arquivo JSON da conta de servi\u00e7o para uso no c\u00f3digo.</li> </ol> <p>Mais informa\u00e7\u00f5es: Documenta\u00e7\u00e3o de OAuth 2.0 - Conta de Servi\u00e7o.</p>"},{"location":"youtube/#2-configuracao-do-firebase","title":"2. Configura\u00e7\u00e3o do Firebase","text":"<ol> <li>Configure o Firestore para armazenar os metadados e analytics dos v\u00eddeos.</li> <li>Instale as depend\u00eancias Firebase no React Native:    <code>bash    npm install @react-native-firebase/app @react-native-firebase/firestore @react-native-firebase/storage</code></li> <li>Siga a documenta\u00e7\u00e3o oficial do Firebase para configurar o projeto.</li> </ol>"},{"location":"youtube/#funcionalidades-e-fluxo","title":"Funcionalidades e Fluxo","text":""},{"location":"youtube/#upload-de-videos","title":"Upload de V\u00eddeos","text":"<ul> <li>Endpoint: <code>videos.insert</code></li> <li>Consumo: 1.600 unidades por upload.</li> </ul> <p>Passos: 1. O jornalista seleciona um v\u00eddeo no app. 2. O app autentica com a Conta de Servi\u00e7o e envia o v\u00eddeo para o YouTube. 3. O ID do v\u00eddeo e metadados s\u00e3o armazenados no Firebase Firestore.</p> <p>Exemplo de C\u00f3digo:</p> <pre><code>import axios from 'axios';\n\nasync function uploadVideo(videoFile, accessToken) {\n  const formData = new FormData();\n  formData.append('file', {\n    uri: videoFile.uri,\n    name: 'video.mp4',\n    type: 'video/mp4',\n  });\n\n  const response = await axios.post(\n    'https://www.googleapis.com/upload/youtube/v3/videos?uploadType=resumable&amp;part=snippet,status',\n    {\n      snippet: {\n        title: 'T\u00edtulo da Mat\u00e9ria',\n        description: 'Descri\u00e7\u00e3o da mat\u00e9ria.',\n        tags: ['not\u00edcia', 'jornalismo'],\n        categoryId: '22',\n      },\n      status: {\n        privacyStatus: 'unlisted',\n      },\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  return response.data.id; // Retorna o ID do v\u00eddeo\n}\n</code></pre>"},{"location":"youtube/#coleta-de-analytics","title":"Coleta de Analytics","text":"<ul> <li>Endpoint: <code>videos.list</code></li> <li>Consumo: 1 unidade por v\u00eddeo.</li> </ul> <p>Passos: 1. Agende uma fun\u00e7\u00e3o para consultar m\u00e9tricas dos v\u00eddeos diariamente. 2. Atualize os metadados no Firestore.</p> <p>Exemplo de C\u00f3digo:</p> <pre><code>import axios from 'axios';\n\nasync function fetchVideoAnalytics(videoIds, accessToken) {\n  const response = await axios.get('https://www.googleapis.com/youtube/v3/videos', {\n    params: {\n      id: videoIds.join(','),\n      part: 'statistics',\n    },\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n\n  return response.data.items.map((item) =&gt; ({\n    id: item.id,\n    views: item.statistics.viewCount,\n    likes: item.statistics.likeCount,\n    comments: item.statistics.commentCount,\n  }));\n}\n</code></pre> <p>Salvar Metadados no Firestore:</p> <pre><code>import firestore from '@react-native-firebase/firestore';\n\nasync function saveNewsMetadata(newsId, metadata) {\n  await firestore().collection('news').doc(newsId).set(metadata);\n}\n\nconst metadata = {\n  title: 'T\u00edtulo da Not\u00edcia',\n  author: 'Jornalista X',\n  createdAt: new Date(),\n  contentUrl: 'URL do arquivo XML',\n};\n\nsaveNewsMetadata('unique-news-id', metadata);\n</code></pre>"},{"location":"youtube/#leitura-de-noticias-no-app","title":"Leitura de Not\u00edcias no App","text":"<p>Fluxo: 1. O app recupera os metadados e links de m\u00eddia do Firestore. 2. Renderiza o conte\u00fado textual e carrega as m\u00eddias vinculadas.</p> <p>Exemplo de Renderiza\u00e7\u00e3o:</p> <pre><code>import React from 'react';\nimport { Text, Image, View } from 'react-native';\nimport YoutubePlayer from 'react-native-youtube-iframe';\n\nfunction NewsArticle({ newsData }) {\n  return (\n    &lt;View&gt;\n      &lt;Text&gt;{newsData.title}&lt;/Text&gt;\n      &lt;Text&gt;{newsData.content}&lt;/Text&gt;\n      &lt;Image source={{ uri: newsData.image }} style={{ width: 300, height: 200 }} /&gt;\n      &lt;YoutubePlayer height={200} play={false} videoId={newsData.videoId} /&gt;\n    &lt;/View&gt;\n  );\n}\n</code></pre>"},{"location":"youtube/#estimativa-e-tabela-de-consumo","title":"Estimativa e Tabela de Consumo","text":"Atividade Custo por A\u00e7\u00e3o Unidades Totais por Dia Capacidade Di\u00e1ria Upload de V\u00eddeos 1.600/unidade 9.600 At\u00e9 6 v\u00eddeos Coleta de Analytics 1/unidade 400 (para 400 v\u00eddeos) Estat\u00edsticas de 400 v\u00eddeos gerenciados"},{"location":"youtube/#pros-e-contras","title":"Pr\u00f3s e Contras","text":""},{"location":"youtube/#pros","title":"Pr\u00f3s","text":"<ul> <li>Gratuito: O YouTube fornece armazenamento e streaming otimizados sem custo adicional.</li> <li>Simplicidade: APIs bem documentadas para upload e gerenciamento.</li> <li>Escalabilidade: Suporte a grandes volumes de v\u00eddeos com coleta eficiente de analytics.</li> </ul>"},{"location":"youtube/#contras","title":"Contras","text":"<ul> <li>Limita\u00e7\u00e3o de Cota: Restri\u00e7\u00e3o de 10.000 unidades di\u00e1rias pode ser um gargalo em alta demanda.</li> <li>Responsabilidade Centralizada: Todos os v\u00eddeos est\u00e3o vinculados a uma \u00fanica conta.</li> <li>Privacidade Limitada: Depend\u00eancia das configura\u00e7\u00f5es de privacidade do YouTube.</li> </ul> <p>Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o oficial da YouTube Data API.</p>"}]}